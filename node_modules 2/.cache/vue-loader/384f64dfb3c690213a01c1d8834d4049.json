{"remainingRequest":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/src/components/PostLists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/src/components/PostLists.vue","mtime":1606054516638},{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonathanskovmose/Desktop/crud/shoe-crud-vue-fire-kopi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHBvc3RSZWYgfSBmcm9tICIuLi9maXJlYmFzZS1kYi5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoVmFsdWU6JycsCiAgICAgIHBvc3RzOiBbXSwKICAgIH07CiAgfSwKIG1ldGhvZHM6ewpzbGV0UG9zdChpZCl7CgogIHBvc3RSZWYuZG9jKGlkKS5kZWxldGUoKQp9LApzZWFyY2hGdW5rdGlvbigpewpjb25zb2xlLmxvZyh0aGlzLnNlYXJjaFZhbHVlKQpsZXQgc2VhcmNoVmFsdWVMb3dlcj10aGlzLnNlYXJjaFZhbHVlLnRvTG93ZXJDYXNlKCkKY29uc29sZS5sb2coc2VhcmNoVmFsdWVMb3dlcikKbGV0IGZpbHRlcmVkUG9zdHM9W10KIApmb3IgKGNvbnN0IHBvc3Qgb2YgdGhpcy5wb3N0cykgewogCmlmKHBvc3QuZGVzY3JpcHRpb24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0aGlzLnNlYXJjaFZhbHVlLnRvTG93ZXJDYXNlKCkpKXsKICBmaWx0ZXJlZFBvc3RzLnB1c2gocG9zdCkKCmNvbnNvbGUubG9nKGZpbHRlcmVkUG9zdHMpCnRoaXMucG9zdHM9ZmlsdGVyZWRQb3N0cwogIH0KICAKCiAgfQoKfQogfSwKICBmaXJlc3RvcmU6IHsKICAgIHBvc3RzOiBwb3N0UmVmLAogIH0sCn07Cg=="},{"version":3,"sources":["PostLists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"PostLists.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-on:keyup=\"searchFunktion\" v-model=\"searchValue\" />\n    <div class=\"grid-container\">\n      <article v-for=\"post in posts\" :key=\"post.id\">\n        <div>\n          <img :src=\"post.img\" alt=\"\" />\n          <p>{{ post.description }}</p>\n        </div>\n\n        <div>\n          <router-link :to=\"{ name: 'Update', params: { post: post } }\">\n            <button>Update</button>\n          </router-link>\n          <button type=\"button\" v-on:click=\"sletPost(post.id)\">Delete</button>\n        </div>\n      </article>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { postRef } from \"../firebase-db.js\";\nexport default {\n  data() {\n    return {\n      searchValue:'',\n      posts: [],\n    };\n  },\n methods:{\nsletPost(id){\n\n  postRef.doc(id).delete()\n},\nsearchFunktion(){\nconsole.log(this.searchValue)\nlet searchValueLower=this.searchValue.toLowerCase()\nconsole.log(searchValueLower)\nlet filteredPosts=[]\n \nfor (const post of this.posts) {\n \nif(post.description.toLowerCase().includes(this.searchValue.toLowerCase())){\n  filteredPosts.push(post)\n\nconsole.log(filteredPosts)\nthis.posts=filteredPosts\n  }\n  \n\n  }\n\n}\n },\n  firestore: {\n    posts: postRef,\n  },\n};\n</script>\n\n<style scoped>\n</style>"]}]}